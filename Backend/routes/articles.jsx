// routes/articles.js
const express = require("express");
const router = express.Router();
const db = require("../db");

// üîç L·∫•y t·∫•t c·∫£ b√†i vi·∫øt
router.get("/", (req, res) => {
  const sql = "SELECT * FROM articles ORDER BY id DESC";
  db.query(sql, (err, results) => {
    if (err) {
      console.error("‚ùå L·ªói khi l·∫•y b√†i vi·∫øt:", err);
      return res.status(500).json({ error: "L·ªói server" });
    }
    res.json(results);
  });
});

// üîç L·∫•y b√†i vi·∫øt theo ID
router.get("/:id", (req, res) => {
  const sql = "SELECT * FROM articles WHERE id = ?";
  db.query(sql, [req.params.id], (err, results) => {
    if (err) {
      console.error("‚ùå L·ªói khi l·∫•y b√†i vi·∫øt theo ID:", err);
      return res.status(500).json({ error: "L·ªói server" });
    }
    if (results.length === 0) {
      return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt" });
    }
    res.json(results[0]);
  });
});

// ‚ûï Th√™m b√†i vi·∫øt
router.post("/", (req, res) => {
  const { title, content, description, image_url, author, additional_images } = req.body;

  console.log("üì• Nh·∫≠n ƒë∆∞·ª£c:", req.body);

  const sql = `
    INSERT INTO articles (title, content, description, image_url, author, additional_images)
    VALUES (?, ?, ?, ?, ?, ?)
  `;

  db.query(sql, [title, content, description, image_url, author, additional_images], (err, result) => {
    if (err) {
      console.error("‚ùå L·ªói khi th√™m b√†i vi·∫øt:", err);
      return res.status(500).json({ error: "L·ªói th√™m b√†i vi·∫øt" });
    }
    res.status(201).json({ message: "‚úÖ Th√™m b√†i vi·∫øt th√†nh c√¥ng", id: result.insertId });
  });
});

// ‚úèÔ∏è C·∫≠p nh·∫≠t b√†i vi·∫øt
router.put("/:id", (req, res) => {
  const { id } = req.params;
  const { title, content, description, image_url, author, additional_images } = req.body;

  const sql = `
    UPDATE articles SET 
      title = ?, content = ?, description = ?, image_url = ?, author = ?, additional_images = ?
    WHERE id = ?
  `;

  db.query(sql, [title, content, description, image_url, author, additional_images, id], (err, result) => {
    if (err) {
      console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t b√†i vi·∫øt:", err);
      return res.status(500).json({ error: "L·ªói c·∫≠p nh·∫≠t b√†i vi·∫øt" });
    }
    res.json({ message: "‚úÖ C·∫≠p nh·∫≠t b√†i vi·∫øt th√†nh c√¥ng" });
  });
});

// üóëÔ∏è Xo√° b√†i vi·∫øt
router.delete("/:id", (req, res) => {
  const sql = "DELETE FROM articles WHERE id = ?";
  db.query(sql, [req.params.id], (err, result) => {
    if (err) {
      console.error("‚ùå L·ªói khi xo√° b√†i vi·∫øt:", err);
      return res.status(500).json({ error: "L·ªói xo√° b√†i vi·∫øt" });
    }
    res.json({ message: "‚úÖ Xo√° b√†i vi·∫øt th√†nh c√¥ng" });
  });
});

module.exports = router;
